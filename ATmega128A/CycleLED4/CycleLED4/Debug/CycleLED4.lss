
CycleLED4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000190  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000013c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000190  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008e5  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007fd  00000000  00000000  00000b05  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d7  00000000  00000000  00001302  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000015dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f7  00000000  00000000  00001600  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000024f  00000000  00000000  000019f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001c46  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	4e c0       	rjmp	.+156    	; 0x138 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:

int main(void)
{
    int i;
	char led;
	DDRB = 0xff;
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	87 bb       	out	0x17, r24	; 23
	
	while (1) 
    {
		led = 0xff;
  a2:	4f ef       	ldi	r20, 0xFF	; 255
		}
		for(i = 0; i < 5; i++)
		{
			led = 0xff;
			led = (led << (4 - i)) & (led >> (4 - i));
			PORTB = led;
  a4:	78 e1       	ldi	r23, 0x18	; 24
  a6:	6c e3       	ldi	r22, 0x3C	; 60
  a8:	5e e7       	ldi	r21, 0x7E	; 126
#define F_CPU 16000000L
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
  aa:	25 e0       	ldi	r18, 0x05	; 5
  ac:	30 e0       	ldi	r19, 0x00	; 0
	char led;
	DDRB = 0xff;
	
	while (1) 
    {
		led = 0xff;
  ae:	84 2f       	mov	r24, r20
		for(i = 0; i < 5; i++)
		{
			PORTB = led;
  b0:	88 bb       	out	0x18, r24	; 24
			led = (led << 1) & (led >> 1);
  b2:	98 2f       	mov	r25, r24
  b4:	99 0f       	add	r25, r25
  b6:	86 95       	lsr	r24
  b8:	89 23       	and	r24, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ba:	9f ef       	ldi	r25, 0xFF	; 255
  bc:	e9 e6       	ldi	r30, 0x69	; 105
  be:	f8 e1       	ldi	r31, 0x18	; 24
  c0:	91 50       	subi	r25, 0x01	; 1
  c2:	e0 40       	sbci	r30, 0x00	; 0
  c4:	f0 40       	sbci	r31, 0x00	; 0
  c6:	e1 f7       	brne	.-8      	; 0xc0 <main+0x22>
  c8:	00 c0       	rjmp	.+0      	; 0xca <main+0x2c>
  ca:	00 00       	nop
  cc:	21 50       	subi	r18, 0x01	; 1
  ce:	31 09       	sbc	r19, r1
	DDRB = 0xff;
	
	while (1) 
    {
		led = 0xff;
		for(i = 0; i < 5; i++)
  d0:	79 f7       	brne	.-34     	; 0xb0 <main+0x12>
		}
		for(i = 0; i < 5; i++)
		{
			led = 0xff;
			led = (led << (4 - i)) & (led >> (4 - i));
			PORTB = led;
  d2:	18 ba       	out	0x18, r1	; 24
  d4:	2f ef       	ldi	r18, 0xFF	; 255
  d6:	89 e6       	ldi	r24, 0x69	; 105
  d8:	98 e1       	ldi	r25, 0x18	; 24
  da:	21 50       	subi	r18, 0x01	; 1
  dc:	80 40       	sbci	r24, 0x00	; 0
  de:	90 40       	sbci	r25, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <main+0x3c>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <main+0x46>
  e4:	00 00       	nop
  e6:	78 bb       	out	0x18, r23	; 24
  e8:	ef ef       	ldi	r30, 0xFF	; 255
  ea:	f9 e6       	ldi	r31, 0x69	; 105
  ec:	28 e1       	ldi	r18, 0x18	; 24
  ee:	e1 50       	subi	r30, 0x01	; 1
  f0:	f0 40       	sbci	r31, 0x00	; 0
  f2:	20 40       	sbci	r18, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x50>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x5a>
  f8:	00 00       	nop
  fa:	68 bb       	out	0x18, r22	; 24
  fc:	8f ef       	ldi	r24, 0xFF	; 255
  fe:	99 e6       	ldi	r25, 0x69	; 105
 100:	e8 e1       	ldi	r30, 0x18	; 24
 102:	81 50       	subi	r24, 0x01	; 1
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e0 40       	sbci	r30, 0x00	; 0
 108:	e1 f7       	brne	.-8      	; 0x102 <main+0x64>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <main+0x6e>
 10c:	00 00       	nop
 10e:	58 bb       	out	0x18, r21	; 24
 110:	ff ef       	ldi	r31, 0xFF	; 255
 112:	29 e6       	ldi	r18, 0x69	; 105
 114:	88 e1       	ldi	r24, 0x18	; 24
 116:	f1 50       	subi	r31, 0x01	; 1
 118:	20 40       	sbci	r18, 0x00	; 0
 11a:	80 40       	sbci	r24, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <main+0x78>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0x82>
 120:	00 00       	nop
 122:	48 bb       	out	0x18, r20	; 24
 124:	9f ef       	ldi	r25, 0xFF	; 255
 126:	e9 e6       	ldi	r30, 0x69	; 105
 128:	f8 e1       	ldi	r31, 0x18	; 24
 12a:	91 50       	subi	r25, 0x01	; 1
 12c:	e0 40       	sbci	r30, 0x00	; 0
 12e:	f0 40       	sbci	r31, 0x00	; 0
 130:	e1 f7       	brne	.-8      	; 0x12a <main+0x8c>
 132:	00 c0       	rjmp	.+0      	; 0x134 <main+0x96>
 134:	00 00       	nop
 136:	b9 cf       	rjmp	.-142    	; 0xaa <main+0xc>

00000138 <_exit>:
 138:	f8 94       	cli

0000013a <__stop_program>:
 13a:	ff cf       	rjmp	.-2      	; 0x13a <__stop_program>
